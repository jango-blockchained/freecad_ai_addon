# GitHub Actions CI/CD Pipeline for FreeCAD AI Addon

name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8, 3.9, '3.10', '3.11']

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y qt6-base-dev qt6-tools-dev-tools
    
    - name: Install Python dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install pytest-cov black flake8 mypy
    
    - name: Lint with flake8
      run: |
        # Stop the build if there are Python syntax errors or undefined names
        flake8 freecad_ai_addon --count --select=E9,F63,F7,F82 --show-source --statistics
        # Treat all errors as warnings
        flake8 freecad_ai_addon --count --exit-zero --max-complexity=10 --max-line-length=88 --statistics
    
    - name: Check code formatting with black
      run: |
        black --check freecad_ai_addon/
    
    - name: Type checking with mypy
      run: |
        mypy freecad_ai_addon/ --ignore-missing-imports
    
    - name: Run tests with pytest
      run: |
        python -m pytest tests/ --cov=freecad_ai_addon --cov-report=xml
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./coverage.xml

  package:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install packaging dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build twine
    
    - name: Build package
      run: |
        python -m build
    
    - name: Create addon archive
      run: |
        # Create FreeCAD addon archive
        zip -r freecad_ai_addon.zip . -x ".git/*" ".github/*" "tests/*" "*.pyc" "__pycache__/*"
    
    - name: Upload artifacts
      uses: actions/upload-artifact@v3
      with:
        name: freecad_ai_addon
        path: |
          dist/
          freecad_ai_addon.zip

  security:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install security scanning tools
      run: |
        python -m pip install --upgrade pip
        pip install bandit safety
    
    - name: Run Bandit security linter
      run: |
        bandit -r freecad_ai_addon/ -f json -o bandit-report.json || true
        bandit -r freecad_ai_addon/
    
    - name: Check dependencies for known security vulnerabilities
      run: |
        safety check --json --output safety-report.json || true
        safety check
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports
        path: |
          bandit-report.json
          safety-report.json
